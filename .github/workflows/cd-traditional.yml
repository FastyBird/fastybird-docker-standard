name: "CD - build and deploy traditional image"

on:
  push:
    branches:
      - "main"
    paths:
      - "traditional/**"

env:
  IMAGE_OWNER: "fastybird"
  IMAGE_NAME: "standard"
  IMAGE_VERSION: "1.0"

jobs:
  ubuntu:
    name: "Build traditional image on Ubuntu"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      fail-fast: false
      matrix:
        operating-system: [ "ubuntu-latest" ]

    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v3"

      - name: "Login to Docker Hub"
        uses: "docker/login-action@v2"
        with:
          username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"

      - name: "Install Buildx"
        id: "buildx"
        uses: "crazy-max/ghaction-docker-buildx@v1"
        with:
          buildx-version: latest

      - name: "Build and Push"
        run: |
          docker buildx build \
              --push \
              --no-cache \
              --tag ${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}-traditional \
              --platform linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v8 traditional/ubuntu/

  alpine:
    name: "Build traditional image on Alpine"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      fail-fast: false
      matrix:
        operating-system: [ "ubuntu-latest" ]

    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v3"

      - name: "Login to Docker Hub"
        uses: "docker/login-action@v2"
        with:
          username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"

      - name: "Install Buildx"
        id: "buildx"
        uses: "crazy-max/ghaction-docker-buildx@v1"
        with:
          buildx-version: latest

      - name: "Build and Push"
        run: |
          docker buildx build \
              --push \
              --no-cache \
              --tag ${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}-traditional-alpine \
              --platform linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v8 traditional/alpine/
